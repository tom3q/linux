* Generic power domains

System on chip designs are often divided into multiple power domains that
can be used for power gating of selected IP blocks for power saving by
reduced leakage current.

This device tree binding can be used to bind power domain consumer devices
with their power domains provided by power domain providers. A power domain
provider can be represented by any node in the device tree and can provide
one or more power domains. A consumer node can refer to the provider by
a phandle and a set of phandle arguments (so called power domain specifier)
of length specified by #power-domain-cells property in the power domain
provider node.

==Power domain providers==

Required properties:
 - #power-domain-cells : Number of cells in a power domain specifier;
   Typically 0 for nodes representing a single power domain and 1 for nodes
   providing multiple power domains (e.g. power controllers), but can be
   any value as specified by device tree binding documentation of particular
   provider.

Example:

	power: power-controller@12340000 {
		compatible = "foo,power-controller";
		reg = <0x12340000 0x1000>;
		#power-domain-cells = <1>;
	};

The node above defines a power controller that is a power domain provider
and expects one cell as its phandle argument.

==Power domain consumers==

Required properties:
 - power-domain : A phandle and power domain specifier as defined by bindings
                  of power controller specified by phandle.

Example:

	leaky-device@12350000 {
		compatible = "foo,i-leak-current";
		reg = <0x12350000 0x1000>;
		power-domain = <&power 0>;
	};

The node above defines a typical power domain consumer device, which is located
inside power domain with index 0 of power controller represented by node with
label "power".
